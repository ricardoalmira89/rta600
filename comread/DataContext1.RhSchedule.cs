//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 15/05/2015 12:58:41
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace OptimusContext
{

    /// <summary>
    /// There are no comments for OptimusContext.RhSchedule in the schema.
    /// </summary>
    [Table(Name = @"shirka_v2.rh_schedule")]
    public partial class RhSchedule : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private string _Name;

        private string _Slug;

        private System.TimeSpan _Begin;

        private System.Nullable<System.TimeSpan> _End;
        #pragma warning restore 0649

        private EntitySet<LibraryLibrarian> _LibraryLibrarians;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnSlugChanging(string value);
        partial void OnSlugChanged();
        partial void OnBeginChanging(System.TimeSpan value);
        partial void OnBeginChanged();
        partial void OnEndChanging(System.Nullable<System.TimeSpan> value);
        partial void OnEndChanged();
        #endregion

        public RhSchedule()
        {
            this._LibraryLibrarians = new EntitySet<LibraryLibrarian>(new Action<LibraryLibrarian>(this.attach_LibraryLibrarians), new Action<LibraryLibrarian>(this.detach_LibraryLibrarians));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT(11) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [Column(Name = @"name", Storage = "_Name", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if (this._Name != value)
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Slug in the schema.
        /// </summary>
        [Column(Name = @"slug", Storage = "_Slug", CanBeNull = false, DbType = "VARCHAR(3) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Slug
        {
            get
            {
                return this._Slug;
            }
            set
            {
                if (this._Slug != value)
                {
                    this.OnSlugChanging(value);
                    this.SendPropertyChanging();
                    this._Slug = value;
                    this.SendPropertyChanged("Slug");
                    this.OnSlugChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Begin in the schema.
        /// </summary>
        [Column(Name = @"`begin`", Storage = "_Begin", CanBeNull = false, DbType = "TIME NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.TimeSpan Begin
        {
            get
            {
                return this._Begin;
            }
            set
            {
                if (this._Begin != value)
                {
                    this.OnBeginChanging(value);
                    this.SendPropertyChanging();
                    this._Begin = value;
                    this.SendPropertyChanged("Begin");
                    this.OnBeginChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for End in the schema.
        /// </summary>
        [Column(Name = @"end", Storage = "_End", DbType = "TIME NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> End
        {
            get
            {
                return this._End;
            }
            set
            {
                if (this._End != value)
                {
                    this.OnEndChanging(value);
                    this.SendPropertyChanging();
                    this._End = value;
                    this.SendPropertyChanged("End");
                    this.OnEndChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LibraryLibrarians in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="RhSchedule_LibraryLibrarian", Storage="_LibraryLibrarians", ThisKey="Id", OtherKey="ScheduleId", DeleteRule="RESTRICT")]
        public EntitySet<LibraryLibrarian> LibraryLibrarians
        {
            get
            {
                return this._LibraryLibrarians;
            }
            set
            {
                this._LibraryLibrarians.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_LibraryLibrarians(LibraryLibrarian entity)
        {
            this.SendPropertyChanging("LibraryLibrarians");
            entity.RhSchedule = this;
        }
    
        private void detach_LibraryLibrarians(LibraryLibrarian entity)
        {
            this.SendPropertyChanging("LibraryLibrarians");
            entity.RhSchedule = null;
        }
    }

}
